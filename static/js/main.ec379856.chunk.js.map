{"version":3,"sources":["components/Panel.js","components/Board.js","utils.js","App.js","index.js"],"names":["PanelContainer","styled","div","PanelStatus","TimeContainer","ol","TimeSlot","li","Panel","winner","isBlackNext","history","setStepNumber","setIsBlackNext","map","time","index","onClick","step","BoardContainer","Row","Grid","props","row","col","Chess","value","next","Board","setHistory","stepNumber","lastStep","board","rowIndex","colIndex","y","x","tempHistory","slice","tempBoard","length","current","tempBoardChange","concat","handleChessClick","countTotal","currentY","currentX","directionX","directionY","now","tempX","tempY","total","Wrap","Name","h1","PlayAgain","App","useState","Array","fill","setWinner","useRef","useLayoutEffect","every","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec379856.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst PanelContainer = styled.div`\n  width: 180px;\n  height: 570px;\n  margin-right: 20px;\n  max-height: 800px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst PanelStatus = styled.div`\n  font-size: 20px;\n  text-align: center;\n  line-height: 40px;\n  width: 80%;\n  height: 40px;\n`;\n\nconst TimeContainer = styled.ol`\n  width: 80%;\n  height: 520px;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst TimeSlot = styled.li`\n  line-height: 40px;\n  text-align: center;\n  margin-top: 8px;\n  width: 100%;\n  height: 40px;\n  background: #cdcdcd\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    color: white;\n    background: grey;\n  }\n`;\n\nexport default function Panel({\n  winner,\n  isBlackNext,\n  history,\n  setStepNumber,\n  setIsBlackNext,\n}) {\n  const jumpTo = (step) => {\n    setStepNumber(step);\n    setIsBlackNext(step % 2 === 0);\n  };\n  return (\n    <PanelContainer>\n      <PanelStatus>\n        {winner\n          ? winner === \"draw\"\n            ? \"平手\"\n            : winner === \"b\"\n            ? \"黑棋勝利 😎\"\n            : \"白棋勝利 😎\"\n          : isBlackNext\n          ? \"換黑棋下\"\n          : \"換白棋下\"}\n      </PanelStatus>\n      <TimeContainer>\n        {history.map((time, index) => {\n          return (\n            <TimeSlot\n              onClick={() => {\n                jumpTo(index);\n              }}\n              key={index}\n            >\n              Back to #{index}\n            </TimeSlot>\n          );\n        })}\n      </TimeContainer>\n    </PanelContainer>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst BoardContainer = styled.div`\n  width: 570px;\n  height: 570px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Row = styled.div`\n  width: 100%;\n  display: flex;\n`;\n\nconst Grid = styled.div`\n  width: 30px;\n  height: 30px;\n  background: #f8de7e;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:after {\n    content: \"\";\n    height: 100%;\n    border: 1px solid black;\n    position: absolute;\n    left: 50%;\n\n    ${(props) => props.row === 0 && `top:50%`}\n\n    ${(props) => props.row === 18 && `bottom:50%`}\n  }\n\n  &:before {\n    content: \"\";\n    width: 100%;\n    border: 1px solid black;\n    position: absolute;\n    top: 50%;\n\n    ${(props) => props.col === 0 && `left: 50%;`}\n\n    ${(props) => props.col === 18 && `right: 50%;`}\n  }\n`;\n\nconst Chess = styled.div`\n  position: relative;\n  width: 80%;\n  height: 80%;\n  border-radius: 50%;\n  z-index: 2;\n\n  ${(props) =>\n    props.value === \"b\" &&\n    `\n      background: black;\n      border: 1px solid grey;\n    `}\n  ${(props) =>\n    props.value === \"w\" &&\n    `\n      background: white;\n      border: 1px solid grey;\n    `}\n\n  &:hover {\n    ${(props) =>\n      props.winner || props.value\n        ? ``\n        : props.next\n        ? `background: rgba(10,10,10,0.5); cursor: pointer`\n        : `background: rgba(255,255,255,0.9); cursor: pointer`}\n  }\n`;\n\nexport default function Board({\n  history,\n  setHistory,\n  stepNumber,\n  setStepNumber,\n  winner,\n  lastStep,\n  isBlackNext,\n  setIsBlackNext,\n}) {\n  const handleChessClick = (y, x) => {\n    // 把 history 裡的最後一個 board 拿出來當作處理的依據\n    const tempHistory = history.slice(0, stepNumber + 1);\n    const tempBoard = tempHistory[tempHistory.length - 1].board;\n\n    if (winner || tempBoard[y][x]) return;\n\n    lastStep.current.x = x;\n    lastStep.current.y = y;\n    const tempBoardChange = tempBoard.map((row, rowIndex) => {\n      if (rowIndex !== y) return row;\n\n      return row.map((col, colIndex) => {\n        if (colIndex !== x) return col;\n        return isBlackNext ? \"b\" : \"w\";\n      });\n    });\n\n    // 處理完塞回去 history\n    setHistory(tempHistory.concat([{ board: tempBoardChange }]));\n    setStepNumber(stepNumber + 1);\n    setIsBlackNext(!isBlackNext);\n  };\n\n  return (\n    <BoardContainer>\n      {history[stepNumber].board.map((row, rowIndex) => {\n        return (\n          <Row key={rowIndex}>\n            {row.map((col, colIndex) => {\n              return (\n                <Grid\n                  key={colIndex}\n                  row={rowIndex}\n                  col={colIndex}\n                  value={history[stepNumber].board[colIndex][rowIndex]}\n                >\n                  <Chess\n                    winner={winner}\n                    next={isBlackNext}\n                    value={history[stepNumber].board[rowIndex][colIndex]}\n                    onClick={() => handleChessClick(rowIndex, colIndex)}\n                  />\n                </Grid>\n              );\n            })}\n          </Row>\n        );\n      })}\n    </BoardContainer>\n  );\n}\n","function countTotal(board, currentY, currentX, directionX, directionY) {\n  const now = board[currentY][currentX];\n\n  let tempX = currentX;\n  let tempY = currentY;\n  let total = 0;\n  do {\n    tempX += directionX;\n    tempY += directionY;\n\n    if (board[tempY] && board[tempY][tempX] === now) {\n      total++;\n    } else {\n      break;\n    }\n  } while (true);\n\n  return total;\n}\n\nexport function findWinner(board, y, x) {\n  if (\n    countTotal(board, y, x, 1, 0) + countTotal(board, y, x, -1, 0) >= 4 ||\n    countTotal(board, y, x, 0, 1) + countTotal(board, y, x, 0, -1) >= 4 ||\n    countTotal(board, y, x, 1, 1) + countTotal(board, y, x, -1, -1) >= 4 ||\n    countTotal(board, y, x, 1, -1) + countTotal(board, y, x, -1, 1) >= 4\n  ) {\n    return board[y][x];\n  }\n  if (board.every((row) => row.every((col) => col))) {\n    return \"draw\";\n  }\n}\n","import React, { useState, useLayoutEffect, useRef } from \"react\";\nimport Panel from \"./components/Panel\";\nimport Board from \"./components/Board\";\nimport styled from \"styled-components\";\nimport { findWinner } from \"./utils.js\";\n\nconst Wrap = styled.div`\n  width: 800px;\n  height: 800px;\n  margin: 20px auto 0;\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Name = styled.h1`\n  font-size: 36px;\n  position: absolute;\n  top: 20px;\n  left: 300px;\n  transform: translateX(-50%);\n`;\n\nconst PlayAgain = styled.div`\n  text-align: center;\n  line-height: 40px;\n  position: absolute;\n  width: 100px;\n  height: 40px;\n  border: 2px solid rgba(20, 20, 20, 0.5);\n  border-radius: 10px;\n  top: 30px;\n  right: 8%;\n\n  &:hover {\n    border: none;\n    cursor: pointer;\n    color: white;\n    background: rgba(20, 20, 20, 0.5);\n  }\n`;\n\nfunction App() {\n  const [history, setHistory] = useState([\n    {\n      board: Array(19).fill(Array(19).fill(null)),\n    },\n  ]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [winner, setWinner] = useState(\"\");\n  const [isBlackNext, setIsBlackNext] = useState(true);\n  const lastStep = useRef({ y: \"\", x: \"\" });\n\n  useLayoutEffect(() => {\n    if (history.length <= 1) return;\n    setWinner(() => {\n      if (!lastStep.current.y && !lastStep.current.x) return;\n      return findWinner(\n        history[stepNumber].board,\n        lastStep.current.y,\n        lastStep.current.x\n      );\n    });\n  }, [history, stepNumber]);\n\n  return (\n    <Wrap>\n      <Name>五子棋</Name>\n      <Board\n        winner={winner}\n        isBlackNext={isBlackNext}\n        setIsBlackNext={setIsBlackNext}\n        history={history}\n        setHistory={setHistory}\n        stepNumber={stepNumber}\n        setStepNumber={setStepNumber}\n        lastStep={lastStep}\n      />\n      <Panel\n        winner={winner}\n        isBlackNext={isBlackNext}\n        history={history}\n        setStepNumber={setStepNumber}\n        setIsBlackNext={setIsBlackNext}\n      />\n      {winner && (\n        <PlayAgain onClick={() => window.location.reload()}>再玩一次</PlayAgain>\n      )}\n    </Wrap>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}